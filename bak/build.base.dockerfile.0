#register key of docker build host for git repo
#mkdir -p /home/c4/tmp_ci/repo && cd /home/c4/tmp_ci/repo
#git clone https://github.com/conecenter/c4proto.git
#git clone git@bitbucket.org:tutelka/c4enterprise.git /home/c4/tmp_ci4enterprise/repo
ARG C4UID=1979
FROM ghcr.io/conecenter/c4replink:v2
USER root
RUN /install.pl apt \
    curl ca-certificates xz-utils \
    libyaml-libyaml-perl libjson-xs-perl python \
    zip rsync '#final-copy' \
    make g++ '#client'
RUN /install.pl curl https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.5%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.5_10.tar.gz
RUN /install.pl curl https://git.io/coursier-cli-linux && chmod +x /tools/coursier
RUN /install.pl curl https://nodejs.org/dist/v14.15.4/node-v14.15.4-linux-x64.tar.xz
USER c4
ENV PATH=${PATH}:/tools/jdk/bin:/tools:/tools/node/bin:/c4/.bloop
RUN curl -L https://github.com/scalacenter/bloop/releases/download/v1.3.4/install.py | python
#some common parts for projects may be moved here, before C4CI_BASE_TAG
ARG C4CI_BASE_TAG
ENV C4CI_BASE_TAG_ENV=$C4CI_BASE_TAG
# do not use the same name for ENV and ARG: https://github.com/moby/moby/issues/34494
ENV C4CI_BUILD_DIR=/c4/main
ENV C4CI_PROTO_DIR=$C4CI_BUILD_DIR/c4proto
ENV C4REPO_MAIN_CONF=$C4CI_BUILD_DIR/c4dep.main.replink
ENV C4STEP_SYNC="find $C4CI_BUILD_DIR >$C4CI_BUILD_DIR/ci.rm && /replink.pl"
ENV C4STEP_BUILD="perl $C4CI_PROTO_DIR/prod.pl ci_inner_build"
ENV C4STEP_BUILD_CLIENT="perl $C4CI_PROTO_DIR/prod.pl build_client $C4CI_BUILD_DIR"
ENV C4STEP_COPY="perl $C4CI_PROTO_DIR/prod.pl ci_inner_cp"
#
COPY --chown=c4:c4 . /c4/main
RUN eval $C4STEP_SYNC
RUN JAVA_TOOL_OPTIONS='-Xss32m' perl -e 'system @ARGV or exit for 0..2;die' $C4STEP_BUILD
RUN $C4STEP_BUILD_CLIENT
RUN $C4STEP_COPY
